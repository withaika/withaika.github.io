

<!DOCTYPE html> 
<html>

<head>
	<title>Images</title> 
		<meta name="viewport" content="width=device-width, initial-scale=1"> 
		<link rel="stylesheet" href="css/themes/default/theme.min.css" />
		<link rel="stylesheet" href="css/themes/default/jquery.mobile.structure-1.2.0.min.css" />
		<script src="js/energize-min.js"></script>
		<script src="js/jquery-1.8.1.min.js"></script>
		
		<script src="../../app.js"></script>
		<script src="js/example.js"></script>
		<link rel="stylesheet" href="css/docs.css" />
		<script src="js/common.js"></script>
		<script src="js/jquery.mobile-1.2.0.min.js"></script>
</head> 

<body> 

<div data-role="page" data-theme="a" >

	<div data-role="header" data-position="fixed">
		<a href='#' class='ui-btn-left' data-icon='arrow-l' data-theme="c" onclick="history.back(); return false">Back</a> <h1>Images</h1>
	</div><!-- /header -->

	<div data-role="content">	
	
		<p>Create Image controls using the <b>CreateImage</b> method of the <b>app</b> object: </p>
		
		<div class="samp">&nbsp;img = app.CreateImage( file, width, height, options );</div>
		
		<p> Use the <b>SetOnTouch</b> method of the Image object to set the name of a function you want to be called when the Image is touched.</p>
		
		<p>When Image controls are touched, they send an <b>event object</b> parameter to your callback function which contains details of the touch event, for example the <b>action</b> property
		 of the event object contains <b>"Down"</b>, <b>"Up"</b> or <b>"Move"</b> as the user touches and moves their finger on the screen and the x and y 
		 properties contain arrays of touch <b>coordinates</b>.</p>
		
		<p>If you don't set a size, the image object will match the original image size. If you set one dimension to a positive value and leave the other
		dimension as -1, then the image will maintain its original <b>aspect ratio</b>.</p>  
		<p>Specifying both width and height will <b>stretch</b> the image to 
		fill the Image object, unless you can use the <b>"ScaleCenter"</b> option to keep the image at it's original size and centered within the Image object</p>
		
		<div data-role="collapsible" data-collapsed="true"  data-mini="true" data-theme="a" data-content-theme="b">
				<h3>Example - Original Size</h3>
				<div id="examp1" style="font-size:70%">
					function OnStart()<br>
					{<br>
					 &nbsp;&nbsp;lay = app.CreateLayout( "Linear", "VCenter,FillXY" );<br><br>
					 <b id="snip1" style="font-size:100%">
					 &nbsp;&nbsp;img = app.CreateImage( "/Sys/Img/Droid1.png" );<br>
					 &nbsp;&nbsp;img.SetOnTouch( img_OnTouch );<br>
					 &nbsp;&nbsp;lay.AddChild( img );<br><br>
					 </b>
					 &nbsp;&nbsp;app.AddLayout( lay );<br>
					}<br>
					<br>
					function img_OnTouch( ev )<br>
					{<br>
					 &nbsp;&nbsp;if( ev.action=="Down" )<br>
					 &nbsp;&nbsp;&nbsp;&nbsp;app.ShowPopup( "Ouch!" );<br>
					}<br>
				</div>
				<div name="divCopy" align="right">
				<a href="#" data-role="button" data-mini="true" data-inline="true" onclick="copy(snip1)">&nbsp;&nbsp;Copy&nbsp;&nbsp;</a>
				<a href="#" data-role="button" data-mini="true" data-inline="true" onclick="copy(examp1)">Copy All</a>
				<a href="#" data-role="button" data-mini="true" data-inline="true" onclick="demo(examp1)">&nbsp;&nbsp;&nbsp;Run&nbsp;&nbsp;&nbsp;</a>
				</div>
		</div>
		
		<div data-role="collapsible" data-collapsed="true"  data-mini="true" data-theme="a" data-content-theme="b">
				<h3>Example - Stretched</h3>
				<div id="examp2" style="font-size:70%">
					function OnStart()<br>
					{<br>
					 &nbsp;&nbsp;lay = app.CreateLayout( "Linear", "VCenter,FillXY" );<br><br>
					 <b id="snip2" style="font-size:100%">
					 &nbsp;&nbsp;img = app.CreateImage( "/Sys/Img/Droid1.png", 0.5, 0.7 );<br>
					 &nbsp;&nbsp;img.SetOnTouch( img_OnTouch );<br>
					 &nbsp;&nbsp;lay.AddChild( img );<br><br>
					 </b>
					 &nbsp;&nbsp;app.AddLayout( lay );<br>
					}<br>
					<br>
					function img_OnTouch( ev )<br>
					{<br>
					 &nbsp;&nbsp;if( ev.action=="Down" )<br>
					 &nbsp;&nbsp;&nbsp;&nbsp;app.ShowPopup( "Aaaargh!" );<br>
					}<br>
				</div>
				<div name="divCopy" align="right">
				<a href="#" data-role="button" data-mini="true" data-inline="true" onclick="copy(snip2)">&nbsp;&nbsp;Copy&nbsp;&nbsp;</a>
				<a href="#" data-role="button" data-mini="true" data-inline="true" onclick="copy(examp2)">Copy All</a>
				<a href="#" data-role="button" data-mini="true" data-inline="true" onclick="demo(examp2)">&nbsp;&nbsp;&nbsp;Run&nbsp;&nbsp;&nbsp;</a>
				</div>
		</div>
		
		<div data-role="collapsible" data-collapsed="true"  data-mini="true" data-theme="a" data-content-theme="b">
				<h3>Example - Maintain Aspect</h3>
				<div id="examp3" style="font-size:70%">
					function OnStart()<br>
					{<br>
					 &nbsp;&nbsp;lay = app.CreateLayout( "Linear", "VCenter,FillXY" );<br><br>
					 <b id="snip3" style="font-size:100%">
					 &nbsp;&nbsp;img = app.CreateImage( "/Sys/Img/Droid1.png", 0.5, -1 );<br>
					 &nbsp;&nbsp;img.SetOnTouch( img_OnTouch );<br>
					 &nbsp;&nbsp;lay.AddChild( img );<br><br>
					 </b>
					 &nbsp;&nbsp;app.AddLayout( lay );<br>
					}<br>
					<br>
					function img_OnTouch( ev )<br>
					{<br>
					 &nbsp;&nbsp;if( ev.action=="Down" )<br>
					 &nbsp;&nbsp;&nbsp;&nbsp;app.ShowPopup( ev.x[0] + ", " + ev.y[0], "Short" );<br>
					}<br>
				</div>
				<div name="divCopy" align="right">
				<a href="#" data-role="button" data-mini="true" data-inline="true" onclick="copy(snip3)">&nbsp;&nbsp;Copy&nbsp;&nbsp;</a>
				<a href="#" data-role="button" data-mini="true" data-inline="true" onclick="copy(examp3)">Copy All</a>
				<a href="#" data-role="button" data-mini="true" data-inline="true" onclick="demo(examp3)">&nbsp;&nbsp;&nbsp;Run&nbsp;&nbsp;&nbsp;</a>
				</div>
		</div>
		
		<h4>Drawing On Images</h4>
		<p>You can use an image control like a <b>Canvas</b> by calling it's drawing methods, such DrawRectangle, DrawCircle, 
		DrawImage etc. </p>
		<p>It's possible to draw over a loaded image or you can start with a blank image by passing the value 'null' to
		the CreateImage method instead of a filename. You can set the background color of your blank image using the 'SetColor' method.</p>
		
		<div data-role="collapsible" data-collapsed="true"  data-mini="true" data-theme="a" data-content-theme="b">
				<h3>Example - Draw Shapes</h3>
				<div id="examp4" style="font-size:70%">
					function OnStart()<br>
					{<br>
					 &nbsp;&nbsp;lay = app.CreateLayout( "Linear", "VCenter,FillXY" );<br><br>
					 <b id="snip3" style="font-size:100%">
					 &nbsp;&nbsp;img = app.CreateImage( null, 0.8, 0.8 );<br>
					 &nbsp;&nbsp;lay.AddChild( img );<br><br>
					 &nbsp;&nbsp;img.SetColor( "#8888ff" );<br>
					 &nbsp;&nbsp;img.SetPaintColor( "#ff0000" );<br>
					 &nbsp;&nbsp;img.DrawCircle( 0.5, 0.5, 0.1 );<br>
					 &nbsp;&nbsp;img.DrawRectangle( 0.7, 0.7, 0.05 );<br>
					 &nbsp;&nbsp;<br>
					 </b>
					 &nbsp;&nbsp;app.AddLayout( lay );<br>
					}<br>
				</div>
				<div name="divCopy" align="right">
				<a href="#" data-role="button" data-mini="true" data-inline="true" onclick="copy(snip4)">&nbsp;&nbsp;Copy&nbsp;&nbsp;</a>
				<a href="#" data-role="button" data-mini="true" data-inline="true" onclick="copy(examp4)">Copy All</a>
				<a href="#" data-role="button" data-mini="true" data-inline="true" onclick="demo(examp4)">&nbsp;&nbsp;&nbsp;Run&nbsp;&nbsp;&nbsp;</a>
				</div>
		</div>
		<br>
		<p>The following methods are avaiable on the Image object:</p>
		
		<div class="samp">&nbsp;GetVisibility()</div>  
		<div class="samp">&nbsp;SetVisibility( visibility )</div>   
		<div class="samp">&nbsp;SetPadding( left, top, right, bottom )</div>
		<div class="samp">&nbsp;SetMargins( left, top, right, bottom )</div>
		<div class="samp">&nbsp;SetPosition( left, top, width, height )</div>
		<div class="samp">&nbsp;SetSize( width, height )</div>
		<div class="samp">&nbsp;GetWidth()</div>
		<div class="samp">&nbsp;GetHeight()</div> 
		
		<div class="samp">&nbsp;Clear()</div>
		<div class="samp">&nbsp;SetAlpha( alpha )</div>
		<div class="samp">&nbsp;SetImage( fileName, width, height )</div>
		<div class="samp">&nbsp;SetImage( img, width, height )</div>
		<div class="samp">&nbsp;SetOnLoad( callback )</div>
		<div class="samp">&nbsp;Save( fileName )</div>
		<div class="samp">&nbsp;GetAbsHeight()</div>
    	<div class="samp">&nbsp;GetAbsWidth()</div>
    	<div class="samp">&nbsp;GetPixelData( format, left, top, width, height )</div>
		<div class="samp">&nbsp;SetMaxRate( ms )</div> 
		<div class="samp">&nbsp;SetOnTouch( callback )</div>
		<div class="samp">&nbsp;SetOnTouchUp( callback )</div>
		<div class="samp">&nbsp;SetOnTouchMove( callback )</div>
		<div class="samp">&nbsp;SetOnTouchDown( callback )</div>
		<div class="samp">&nbsp;SetOnLongTouch( callback )</div>
		<div class="samp">&nbsp;SetTouchable( touchable )</div>
		<div class="samp">&nbsp;DrawImage( image, x, y, w, h, angle )</div>
		<div class="samp">&nbsp;DrawImageMtx( image, matrix )</div>
		<div class="samp">&nbsp;DrawPoint( x, y )</div>
		<div class="samp">&nbsp;DrawCircle( x, y, radius )</div>
		<div class="samp">&nbsp;DrawArc( x1, y1, x2, y2, start, sweep )</div>
		<div class="samp">&nbsp;DrawLine( x1, y1, x2, y2 )</div>
		<div class="samp">&nbsp;DrawRectangle( x1, y1, x2, y2 )</div>
		<div class="samp">&nbsp;DrawText( text, x, y )</div>
		<div class="samp">&nbsp;Update()</div>
    	<div class="samp">&nbsp;SetAutoUpdate( onoff )</div>
		<div class="samp">&nbsp;SetColor( colorCode )</div>
		<div class="samp">&nbsp;SetTextSize( size )</div>
		<div class="samp">&nbsp;SetFontFile( file )</div>
		<div class="samp">&nbsp;SetLineWidth( width )</div>
		<div class="samp">&nbsp;SetPaintColor( colorCode )</div>
		<div class="samp">&nbsp;SetPaintStyle( style )</div> 
		<div class="samp">&nbsp;Rotate( angle, pivotX, pivotY )</div>
		<div class="samp">&nbsp;Move( x, y )</div>
		<div class="samp">&nbsp;Scale( x, y )</div>
		<div class="samp">&nbsp;Skew( x, y )</div>
    	<div class="samp">&nbsp;Transform( matrix )</div>
		<div class="samp">&nbsp;Reset()</div>

		<br>
		
	</div><!-- /content -->
	
</div><!-- /page -->

</body>
</html>