
<!DOCTYPE html> 
<html>

<head>
	<title>Scroller</title> 
		<meta name="viewport" content="width=device-width, initial-scale=1"> 
		<link rel="stylesheet" href="css/themes/default/theme.min.css" />
		<link rel="stylesheet" href="css/themes/default/jquery.mobile.structure-1.2.0.min.css" />
		<script src="js/energize-min.js"></script>
		<script src="js/jquery-1.8.1.min.js"></script>
		
		<script src="../../app.js"></script>
		<script src="js/example.js"></script>
		<link rel="stylesheet" href="css/docs.css" />
		<script src="js/common.js"></script>
		<script src="js/jquery.mobile-1.2.0.min.js"></script>
</head> 

<body> 

<div data-role="page" data-theme="a">

	<div data-role="header" data-position="fixed">
		<a href='#' class='ui-btn-left' data-icon='arrow-l' data-theme="c" onclick="history.back(); return false">Back</a> <h1>Scroller</h1>
	</div><!-- /header -->

	<div data-role="content">	
			
		<p> Create a Scroller using the <b>CreateScroller</b> method of the <b>app</b> object: </p>
		
		<div class="samp">&nbsp;scroll = app.CreateScroller( width, height, options );</div>

		<p> The <b>options</b> for the Scroller are the same as the LinearLayout fill options, which set how a Scroller sizes within it's parent:- <b>"FillX"</b>, <b>"FillY"</b> and <b>"FillXY"</b>. By default Scrollers will auto-size to wrap their contents.</p>
		
		<p> Create a full screen Scroller with <b>width</b> and <b>height</b> set to 1.0 <p>
		
			<div data-role="collapsible" data-collapsed="true"  data-mini="true" data-theme="a" data-content-theme="b">
				<h3>Example</h3>
				<div id="examp1" style="font-size:70%">
					function OnStart()<br>
					{<br>
    				&nbsp;&nbsp;lay = app.CreateLayout( "Linear", "FillXY" );<br> 
    				<br>
    				<b id="snip1"  style="font-size:100%">
    				&nbsp;&nbsp;scroll = app.CreateScroller( 1.0, 1.0 );<br>
    				&nbsp;&nbsp;lay.AddChild( scroll );<br>
    				<br>
    				&nbsp;&nbsp;layScroll = app.CreateLayout( "Linear", "Left" );<br>
    				&nbsp;&nbsp;scroll.AddChild( layScroll );<br>
    				<br>
    				&nbsp;&nbsp;img = app.CreateImage( "/Sys/Img/Hello.png", 2.0, 2.0 );<br>
    				&nbsp;&nbsp;layScroll.AddChild( img );<br>
    				</b>
       				<br>
    				&nbsp;&nbsp;app.AddLayout( lay );<br>
    				}<br>					
				</div>
				<div name="divCopy" align="right">
				<a href="#" data-role="button" data-mini="true" data-inline="true" onclick="copy(snip1)">&nbsp;&nbsp;Copy&nbsp;&nbsp;</a>
				<a href="#" data-role="button" data-mini="true" data-inline="true" onclick="copy(examp1)">Copy All</a>
				<a href="#" data-role="button" data-mini="true" data-inline="true" onclick="demo(examp1)">&nbsp;&nbsp;&nbsp;Run&nbsp;&nbsp;&nbsp;</a>
				</div>
		</div>

		<p>The following methods are available on the Scroller object:</p>
	
		<div class="samp">&nbsp;SetVisibility( visibility )</div>   
		<div class="samp">&nbsp;GetVisibility()</div>  
		<div class="samp">&nbsp;SetPadding( left, top, right, bottom )</div>
		<div class="samp">&nbsp;SetMargins( left, top, right, bottom )</div>
		<div class="samp">&nbsp;SetPosition( left, top, width, height )</div>
		<div class="samp">&nbsp;SetSize( width, height )</div>
		<div class="samp">&nbsp;GetWidth()</div>
		<div class="samp">&nbsp;GetHeight()</div> 
		
		<div class="samp">&nbsp;AddChild( child )</div> 
    	<div class="samp">&nbsp;RemoveChild( child )</div> 
    	<div class="samp">&nbsp;DestroyChild( child )</div> 
    	<div class="samp">&nbsp;ScrollTo( x, y )</div> 
    	<div class="samp">&nbsp;ScrollBy( x, y )</div> 
    	<div class="samp">&nbsp;GetScrollX()</div> 
    	<div class="samp">&nbsp;GetScrollY()</div> 
		<br>
		
	</div><!-- /content -->
	
</div><!-- /page -->

</body>
</html>